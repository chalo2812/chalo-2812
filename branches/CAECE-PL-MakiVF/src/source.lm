const M : natural = 7n, R : integer = 90;
var N, S : integer;
var A[12] : natural;

procedure PROC1();
var A : integer;
var B : natural;
begin
  B := M;
  while B > 0 do
    if even(B) then
      A := A + 1;
    fin-si
    showLN 'Visualizacion', B, ' ', A
    B := B - 1
  end-while
end-proc;

procedure PROC2(byref R : entero);
const T : natural = 67n;
var W11 : integer;
var W12, Q, R : natural;
begin
  S := (S ++ M) ** 2n;
  Q := 1n;
  read W11;  {lectura de teclado}
  W12 := TONATURAL(AW11 * 2 + S);
  while (W12 – 2) <= R + S do
    W12 := W12 * 2;
  end-while;
  while W12 + M > Y / 2 do
    Q := Q * 2;
    W12 := W12 / 2;
    if W12 <= R then
      R := R – W12;
      Q := Q + 1;
    end-if;
  end-while;
  A[1] := Q;
end-proc;

function FUN1(T: integer, byval N2 : integer) : integer;
var N: integer;
begin
  if T > 0 then
    N := 45;
  else
    N := 70;
  end-if;
end-func N * 2;

procedure MAIN();
var X: integer;
begin
  PROC1();
  S := M + 1;
  PROC2(S);
  X := FUN1(5, 8);
  A[5n] := X;
  show A[TONATURAL(S) ++ 1n];
end-proc;
